//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WireSockUI.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WireSockUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A profile named &quot;{0}&quot; already exists..
        /// </summary>
        internal static string AddProfileExistsMsg {
            get {
                return ResourceManager.GetString("AddProfileExistsMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import error.
        /// </summary>
        internal static string AddProfileExistsTitle {
            get {
                return ResourceManager.GetString("AddProfileExistsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Another instance of WireSockUI or Wiresock VPN Client Service is already running..
        /// </summary>
        internal static string AlreadyRunningMessage {
            get {
                return ResourceManager.GetString("AlreadyRunningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Already Running.
        /// </summary>
        internal static string AlreadyRunningTitle {
            get {
                return ResourceManager.GetString("AlreadyRunningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock VPN Client needs to be installed for WireSockUI to function..
        /// </summary>
        internal static string AppNoWireSockMessage {
            get {
                return ResourceManager.GetString("AppNoWireSockMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock not found.
        /// </summary>
        internal static string AppNoWireSockTitle {
            get {
                return ResourceManager.GetString("AppNoWireSockTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It looks like you are trying to run a version of WireSockUI that is not compatible with your system. Please use WireSockUI with the appropriate architecture instead..
        /// </summary>
        internal static string AppUnsupportedArchMessage {
            get {
                return ResourceManager.GetString("AppUnsupportedArchMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A newer WireSockUI client is available for download..
        /// </summary>
        internal static string AppUpdateMessage {
            get {
                return ResourceManager.GetString("AppUpdateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New version.
        /// </summary>
        internal static string AppUpdateTitle {
            get {
                return ResourceManager.GetString("AppUpdateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://www.wiresock.net/.
        /// </summary>
        internal static string AppWireSockURL {
            get {
                return ResourceManager.GetString("AppWireSockURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activating... Click to Cancel.
        /// </summary>
        internal static string ButtonActivating {
            get {
                return ResourceManager.GetString("ButtonActivating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deactivate.
        /// </summary>
        internal static string ButtonActive {
            get {
                return ResourceManager.GetString("ButtonActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AntiRKN.
        /// </summary>
        internal static string ButtonAntiRKN {
            get {
                return ResourceManager.GetString("ButtonAntiRKN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit.
        /// </summary>
        internal static string ButtonEdit {
            get {
                return ResourceManager.GetString("ButtonEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activate.
        /// </summary>
        internal static string ButtonInactive {
            get {
                return ResourceManager.GetString("ButtonInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status: Active.
        /// </summary>
        internal static string ContextMenuActive {
            get {
                return ResourceManager.GetString("ContextMenuActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status: Inactive.
        /// </summary>
        internal static string ContextMenuInactive {
            get {
                return ResourceManager.GetString("ContextMenuInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to remove profile &quot;{0}&quot;?.
        /// </summary>
        internal static string DeleteProfileConfirmMsg {
            get {
                return ResourceManager.GetString("DeleteProfileConfirmMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirmation.
        /// </summary>
        internal static string DeleteProfileConfirmTitle {
            get {
                return ResourceManager.GetString("DeleteProfileConfirmTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect on start.
        /// </summary>
        internal static string DialogAutoConnect {
            get {
                return ResourceManager.GetString("DialogAutoConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wireguard configuration files (*.conf)|*.conf.
        /// </summary>
        internal static string DialogOpenFileFilter {
            get {
                return ResourceManager.GetString("DialogOpenFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select configuration file.
        /// </summary>
        internal static string DialogOpenFileTitle {
            get {
                return ResourceManager.GetString("DialogOpenFileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allow App....
        /// </summary>
        internal static string EditAllowApp {
            get {
                return ResourceManager.GetString("EditAllowApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        internal static string EditCancel {
            get {
                return ResourceManager.GetString("EditCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disallow App....
        /// </summary>
        internal static string EditDisallowApp {
            get {
                return ResourceManager.GetString("EditDisallowApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name:.
        /// </summary>
        internal static string EditName {
            get {
                return ResourceManager.GetString("EditName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Processes....
        /// </summary>
        internal static string EditProcesses {
            get {
                return ResourceManager.GetString("EditProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter profile name....
        /// </summary>
        internal static string EditProfileCue {
            get {
                return ResourceManager.GetString("EditProfileCue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save error.
        /// </summary>
        internal static string EditProfileError {
            get {
                return ResourceManager.GetString("EditProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile name missing or invalid.
        /// </summary>
        internal static string EditProfileNameError {
            get {
                return ResourceManager.GetString("EditProfileNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Editing configuration {0}.
        /// </summary>
        internal static string EditProfileTitle {
            get {
                return ResourceManager.GetString("EditProfileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New configuration.
        /// </summary>
        internal static string EditProfileTitleNew {
            get {
                return ResourceManager.GetString("EditProfileTitleNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public key:.
        /// </summary>
        internal static string EditPublicKey {
            get {
                return ResourceManager.GetString("EditPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        internal static string EditSave {
            get {
                return ResourceManager.GetString("EditSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock UI.
        /// </summary>
        internal static string FormMain {
            get {
                return ResourceManager.GetString("FormMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        internal static string FormSettings {
            get {
                return ResourceManager.GetString("FormSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select process.
        /// </summary>
        internal static string FormTaskManager {
            get {
                return ResourceManager.GetString("FormTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon ico {
            get {
                object obj = ResourceManager.GetObject("ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Addresses.
        /// </summary>
        internal static string InterfaceAddresses {
            get {
                return ResourceManager.GetString("InterfaceAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ListenPort.
        /// </summary>
        internal static string InterfaceListenPort {
            get {
                return ResourceManager.GetString("InterfaceListenPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MTU.
        /// </summary>
        internal static string InterfaceMTU {
            get {
                return ResourceManager.GetString("InterfaceMTU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public key.
        /// </summary>
        internal static string InterfacePublicKey {
            get {
                return ResourceManager.GetString("InterfacePublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string InterfaceStatus {
            get {
                return ResourceManager.GetString("InterfaceStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Active.
        /// </summary>
        internal static string InterfaceStatusActive {
            get {
                return ResourceManager.GetString("InterfaceStatusActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inactive.
        /// </summary>
        internal static string InterfaceStatusInactive {
            get {
                return ResourceManager.GetString("InterfaceStatusInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Interface: {0}.
        /// </summary>
        internal static string InterfaceTitle {
            get {
                return ResourceManager.GetString("InterfaceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last saved config not found..
        /// </summary>
        internal static string LastProfileNotFound {
            get {
                return ResourceManager.GetString("LastProfileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на yyyy-MM-dd HH:mm:ss.fff.
        /// </summary>
        internal static string LogTimestampFormat {
            get {
                return ResourceManager.GetString("LogTimestampFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Tunnel.
        /// </summary>
        internal static string MenuAddTunnel {
            get {
                return ResourceManager.GetString("MenuAddTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Tunnel.
        /// </summary>
        internal static string MenuDeleteTunnel {
            get {
                return ResourceManager.GetString("MenuDeleteTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add empty tunnel....
        /// </summary>
        internal static string MenuEmptyTunnel {
            get {
                return ResourceManager.GetString("MenuEmptyTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import tunnel from file....
        /// </summary>
        internal static string MenuImportTunnel {
            get {
                return ResourceManager.GetString("MenuImportTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        internal static string MenuSettings {
            get {
                return ResourceManager.GetString("MenuSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Peer.
        /// </summary>
        internal static string PanelPeer {
            get {
                return ResourceManager.GetString("PanelPeer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на State.
        /// </summary>
        internal static string PanelState {
            get {
                return ResourceManager.GetString("PanelState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allowed apps.
        /// </summary>
        internal static string PeerAllowedApps {
            get {
                return ResourceManager.GetString("PeerAllowedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allowed IPs.
        /// </summary>
        internal static string PeerAllowedIPs {
            get {
                return ResourceManager.GetString("PeerAllowedIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disallowed apps.
        /// </summary>
        internal static string PeerDisallowedApps {
            get {
                return ResourceManager.GetString("PeerDisallowedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disallowed IPs.
        /// </summary>
        internal static string PeerDisallowedIPs {
            get {
                return ResourceManager.GetString("PeerDisallowedIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Endpoint.
        /// </summary>
        internal static string PeerEndpoint {
            get {
                return ResourceManager.GetString("PeerEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Persistent keepalive.
        /// </summary>
        internal static string PeerPersistentKeepAlive {
            get {
                return ResourceManager.GetString("PeerPersistentKeepAlive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preshared key.
        /// </summary>
        internal static string PeerPresharedKey {
            get {
                return ResourceManager.GetString("PeerPresharedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на enabled.
        /// </summary>
        internal static string PeerPresharedKeyValue {
            get {
                return ResourceManager.GetString("PeerPresharedKeyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public key.
        /// </summary>
        internal static string PeerPublicKey {
            get {
                return ResourceManager.GetString("PeerPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SOCKS5 password.
        /// </summary>
        internal static string PeerSocks5Password {
            get {
                return ResourceManager.GetString("PeerSocks5Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на configured.
        /// </summary>
        internal static string PeerSocks5PasswordValue {
            get {
                return ResourceManager.GetString("PeerSocks5PasswordValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SOCKS5 proxy.
        /// </summary>
        internal static string PeerSocks5Proxy {
            get {
                return ResourceManager.GetString("PeerSocks5Proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SOCKS5 Username.
        /// </summary>
        internal static string PeerSocks5Username {
            get {
                return ResourceManager.GetString("PeerSocks5Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type to search....
        /// </summary>
        internal static string ProcessesSearchCue {
            get {
                return ResourceManager.GetString("ProcessesSearchCue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile error.
        /// </summary>
        internal static string ProfileError {
            get {
                return ResourceManager.GetString("ProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Virtual Network Adapter mode.
        /// </summary>
        internal static string SettingsAdapterMode {
            get {
                return ResourceManager.GetString("SettingsAdapterMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatically connect on start.
        /// </summary>
        internal static string SettingsAutoConnect {
            get {
                return ResourceManager.GetString("SettingsAutoConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimize to tray on start.
        /// </summary>
        internal static string SettingsAutoMinimize {
            get {
                return ResourceManager.GetString("SettingsAutoMinimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run when Windows starts.
        /// </summary>
        internal static string SettingsAutoRun {
            get {
                return ResourceManager.GetString("SettingsAutoRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check online for updates.
        /// </summary>
        internal static string SettingsAutoUpdate {
            get {
                return ResourceManager.GetString("SettingsAutoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log level.
        /// </summary>
        internal static string SettingsLogLevel {
            get {
                return ResourceManager.GetString("SettingsLogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open profiles folder.
        /// </summary>
        internal static string SettingsProfiles {
            get {
                return ResourceManager.GetString("SettingsProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        internal static string SettingsSave {
            get {
                return ResourceManager.GetString("SettingsSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bytes.
        /// </summary>
        internal static string SizeBytes {
            get {
                return ResourceManager.GetString("SizeBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:f2} {1}.
        /// </summary>
        internal static string SizeFormat {
            get {
                return ResourceManager.GetString("SizeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GiB.
        /// </summary>
        internal static string SizeGB {
            get {
                return ResourceManager.GetString("SizeGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на KiB.
        /// </summary>
        internal static string SizeKB {
            get {
                return ResourceManager.GetString("SizeKB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MiB.
        /// </summary>
        internal static string SizeMB {
            get {
                return ResourceManager.GetString("SizeMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PiB.
        /// </summary>
        internal static string SizePB {
            get {
                return ResourceManager.GetString("SizePB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TiB.
        /// </summary>
        internal static string SizeTB {
            get {
                return ResourceManager.GetString("SizeTB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Latest handshake.
        /// </summary>
        internal static string StateHandshake {
            get {
                return ResourceManager.GetString("StateHandshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Estimated loss.
        /// </summary>
        internal static string StateLoss {
            get {
                return ResourceManager.GetString("StateLoss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}%.
        /// </summary>
        internal static string StateLossValue {
            get {
                return ResourceManager.GetString("StateLossValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round-trip time.
        /// </summary>
        internal static string StateRTT {
            get {
                return ResourceManager.GetString("StateRTT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} ms.
        /// </summary>
        internal static string StateRTTValue {
            get {
                return ResourceManager.GetString("StateRTTValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transfer.
        /// </summary>
        internal static string StateTransfer {
            get {
                return ResourceManager.GetString("StateTransfer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} received, {1} sent.
        /// </summary>
        internal static string StateTransferValue {
            get {
                return ResourceManager.GetString("StateTransferValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log.
        /// </summary>
        internal static string TabPageLog {
            get {
                return ResourceManager.GetString("TabPageLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tunnels.
        /// </summary>
        internal static string TabPageTunnels {
            get {
                return ResourceManager.GetString("TabPageTunnels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #
        ///# WireGuard sample configuration, please provide the necessary details
        ///#
        ///; Local Interface Definition
        ///[Interface]
        ///PrivateKey = 
        ///; Local address in CIDR format
        ///Address = 172.16.0.2/32
        ///MTU = 1280
        ///ListenPort = 49152
        ///DNS = 1.0.0.1, 1.1.1.1
        ///
        ///; Peer Definition
        ///[Peer]
        ///PublicKey = 
        ///; Optional: preshared key
        ///PresharedKey = 
        ///; Peer IPv4, IPv6 or DNS endpoint with port
        ///Endpoint = myserver.dyndns.org:51820
        ///AllowedIPs = 0.0.0.0/0, ::/0
        ///; Optional: Send persistent keep alive packets every 5 minutes  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string template_conf {
            get {
                return ResourceManager.GetString("template.conf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на yesterday.
        /// </summary>
        internal static string TimeLapseDay {
            get {
                return ResourceManager.GetString("TimeLapseDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  days ago.
        /// </summary>
        internal static string TimeLapseDays {
            get {
                return ResourceManager.GetString("TimeLapseDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на an hour ago.
        /// </summary>
        internal static string TimeLapseHour {
            get {
                return ResourceManager.GetString("TimeLapseHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  hours ago.
        /// </summary>
        internal static string TimeLapseHours {
            get {
                return ResourceManager.GetString("TimeLapseHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на a minute ago.
        /// </summary>
        internal static string TimeLapseMinute {
            get {
                return ResourceManager.GetString("TimeLapseMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  minutes ago.
        /// </summary>
        internal static string TimeLapseMinutes {
            get {
                return ResourceManager.GetString("TimeLapseMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на one month ago.
        /// </summary>
        internal static string TimeLapseMonth {
            get {
                return ResourceManager.GetString("TimeLapseMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  months ago.
        /// </summary>
        internal static string TimeLapseMonths {
            get {
                return ResourceManager.GetString("TimeLapseMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на one second ago.
        /// </summary>
        internal static string TimeLapseSecond {
            get {
                return ResourceManager.GetString("TimeLapseSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  seconds ago.
        /// </summary>
        internal static string TimeLapseSeconds {
            get {
                return ResourceManager.GetString("TimeLapseSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на one year ago.
        /// </summary>
        internal static string TimeLapseYear {
            get {
                return ResourceManager.GetString("TimeLapseYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  years ago.
        /// </summary>
        internal static string TimeLapseYears {
            get {
                return ResourceManager.GetString("TimeLapseYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} tunnel has been activated..
        /// </summary>
        internal static string ToastActiveMessage {
            get {
                return ResourceManager.GetString("ToastActiveMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock Activated.
        /// </summary>
        internal static string ToastActiveTitle {
            get {
                return ResourceManager.GetString("ToastActiveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} tunnel has been deactivated..
        /// </summary>
        internal static string ToastInactiveMessage {
            get {
                return ResourceManager.GetString("ToastInactiveMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock Deactivated.
        /// </summary>
        internal static string ToastInactiveTitle {
            get {
                return ResourceManager.GetString("ToastInactiveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock: Activating.
        /// </summary>
        internal static string TrayActivating {
            get {
                return ResourceManager.GetString("TrayActivating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock: Active.
        /// </summary>
        internal static string TrayActive {
            get {
                return ResourceManager.GetString("TrayActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WireSock: Inactive.
        /// </summary>
        internal static string TrayInactive {
            get {
                return ResourceManager.GetString("TrayInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to create the tunnel from the provided configuration. Please check log..
        /// </summary>
        internal static string TunnelErrorCreate {
            get {
                return ResourceManager.GetString("TunnelErrorCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to connect to tunnel manager. Please check log..
        /// </summary>
        internal static string TunnelErrorManager {
            get {
                return ResourceManager.GetString("TunnelErrorManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tunnel has failed to start. Please check log..
        /// </summary>
        internal static string TunnelErrorStart {
            get {
                return ResourceManager.GetString("TunnelErrorStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        internal static string TunnelErrorTitle {
            get {
                return ResourceManager.GetString("TunnelErrorTitle", resourceCulture);
            }
        }
    }
}
